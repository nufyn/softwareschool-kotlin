# 코틀린 - 문법(2)

<ol>
  <li>함수
    <ul>
      <li>C언어, JAVA 함수<br>이미지 업로드 예정</li>
      <li>코틀린 함수(자주쓰임)</li>
      <ul>
        <li>코틀린의 모든함수는 fun으로 선언한다. return값이 있을 경우 변수의 데이터 지정과 같이 데이터 형식을 지정한다.</li><br>
        <li>override 함수 설명 추가예정</li>
      </ul>
    </ul>
  </li>
  <br/>
  <li>컬렉션, 제네릭
    <ul>
        <li>컬렉션(자주쓰임)</li>
          <ul>
            <li>컬렉션(Collections) - 여러 데이터를 모아놓은 하나의 단위로 정의한다.</li><br>
            <li>종류</li>
              <ul>
                <li>listOf - 데이터가 일렬로 배열 되어있음. 안의 요소들은 초기화를 하면 변경이 불가능 하며 Array와 유사하다.<br>이미지 업로드 예정</li>
                <li>ArrayList - listOf와 유사하지만 포함된 데이터를 변경할 수 있다. (자주쓰임)<br>이미지 업로드 예정</li>
                <li>mapOf - key와 value를 가지는 데이터 컬렉션 이다. 요소들은 초기화 하면 변경이 불가능하다.<br>이미지 업로드 예정</li>
                <li>hashMapOf - mapOf와 유사하지만 포함된 데이터를 변경할 수 있다.<br>이미지 업로드 예정</li><br>
              </ul>
          </ul>      
        <li>제네릭</li>
          <ul>
            <li>제네릭(Generics) - 클래스나 함수를 정의할 때 타입을 확실히 정하지 않는 것을 의미한다.</li>
              <ul>
                <li>제네릭을 나타내기 위해서 데이터 형식에 T를 쓴다.<br>제네릭 함수 이미지 업로드</li>
                <li>위와 같은 함수에서 숫자가 반환 되어야 하지만 데이터 형식이 T이기 때문에 문자열이 들어올 수 있다. 이와 같은 상황을 방지 하기 위해 제한(제약)을 둘 수도 있다.<br>제네릭 제약 이미지 업로드 예정</li>
              </ul>
          </ul>
    </ul>
  </li>
  <br/>
  <li>클래스
    <ul>
        <li>Java에서는 객체 생성시 생성자, get, set함수를 따로 만들어 줘야 하지만 코틀린에서는 아니다.<br>이미지 업로드 예정</li>      
        <li>코틀린에서는 생성자의 역할을 init에서 하고 get, set함수는 코틀린 자체적으로 만들기 떄문에 사용만 하면된다.<br>이미지 업로드 예정</li>
        <li>보조 생성자의 경우에는 constructor라는 것을 쓰면된다.(부분 할당 하고싶을 때)<br>이미지 업로드 예정</li>
        <li>Java의 public static과 같은 전역 변수는 코틀린에서 companion object라는 것을 사용한다.<br>이미지 참조</li><br>
        <li>데이터 클래스(자주쓰임)</li>
          <ul>
            <li>데이터 클래스(data class) - 데이터만 담기 위해 존재하는 클래스이다. 함수 같은 것들이 존재하지 않는다.(데이터 틀을 만들기에 유용함)<br>이미지 업로드예정</li>
            <li>사용예제<br>이미지 업로드 예정</li>
          </ul>
    </ul>
  </li>
  <br/>
  <li>람다(중요, 자주쓰임)
    <ul>
        <li>람다식(Lambda Expressions) - "식별자 없이 실행 가능한 함수"<br>함수인데 함수를 따로 만들지 않고 코드 한줄에 써서 그 함수를 호출 하는 방식이다. 매우 편리하여 자주 쓰인다.<br>자바에서도 이용이 가능하지만 잘 사용되지 않고 코틀린에서는 빈도가 높게 사용된다.<br>이미지 업로드예정</li>
    </ul>
  </li>
</ol>
